//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestMafia.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IGestionPartie")]
    public interface IGestionPartie {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/CreerPartie", ReplyAction="http://tempuri.org/IGestionPartie/CreerPartieResponse")]
        Domain.JoueurDto CreerPartie(string nomPartie, string nomJoueur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/CreerPartie", ReplyAction="http://tempuri.org/IGestionPartie/CreerPartieResponse")]
        System.Threading.Tasks.Task<Domain.JoueurDto> CreerPartieAsync(string nomPartie, string nomJoueur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/RejoindrePartie", ReplyAction="http://tempuri.org/IGestionPartie/RejoindrePartieResponse")]
        bool RejoindrePartie(string pseudo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/RejoindrePartie", ReplyAction="http://tempuri.org/IGestionPartie/RejoindrePartieResponse")]
        System.Threading.Tasks.Task<bool> RejoindrePartieAsync(string pseudo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/CommencerPartie", ReplyAction="http://tempuri.org/IGestionPartie/CommencerPartieResponse")]
        bool CommencerPartie();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/CommencerPartie", ReplyAction="http://tempuri.org/IGestionPartie/CommencerPartieResponse")]
        System.Threading.Tasks.Task<bool> CommencerPartieAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/GetPartieDebug", ReplyAction="http://tempuri.org/IGestionPartie/GetPartieDebugResponse")]
        string GetPartieDebug();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/GetPartieDebug", ReplyAction="http://tempuri.org/IGestionPartie/GetPartieDebugResponse")]
        System.Threading.Tasks.Task<string> GetPartieDebugAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/VoirPartie", ReplyAction="http://tempuri.org/IGestionPartie/VoirPartieResponse")]
        Domain.Dto.PartieDto[] VoirPartie(string pseudo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/VoirPartie", ReplyAction="http://tempuri.org/IGestionPartie/VoirPartieResponse")]
        System.Threading.Tasks.Task<Domain.Dto.PartieDto[]> VoirPartieAsync(string pseudo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/LancerPartie", ReplyAction="http://tempuri.org/IGestionPartie/LancerPartieResponse")]
        Domain.Dto.PartieDto LancerPartie();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/LancerPartie", ReplyAction="http://tempuri.org/IGestionPartie/LancerPartieResponse")]
        System.Threading.Tasks.Task<Domain.Dto.PartieDto> LancerPartieAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/piocherCarte", ReplyAction="http://tempuri.org/IGestionPartie/piocherCarteResponse")]
        Domain.Dto.CarteDto piocherCarte(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/piocherCarte", ReplyAction="http://tempuri.org/IGestionPartie/piocherCarteResponse")]
        System.Threading.Tasks.Task<Domain.Dto.CarteDto> piocherCarteAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getJoueurParticipantDto", ReplyAction="http://tempuri.org/IGestionPartie/getJoueurParticipantDtoResponse")]
        Domain.Dto.JoueurPartieDto getJoueurParticipantDto(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getJoueurParticipantDto", ReplyAction="http://tempuri.org/IGestionPartie/getJoueurParticipantDtoResponse")]
        System.Threading.Tasks.Task<Domain.Dto.JoueurPartieDto> getJoueurParticipantDtoAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getListJoueurParticipantsDto", ReplyAction="http://tempuri.org/IGestionPartie/getListJoueurParticipantsDtoResponse")]
        Domain.Dto.JoueurPartieDto[] getListJoueurParticipantsDto(int IdPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getListJoueurParticipantsDto", ReplyAction="http://tempuri.org/IGestionPartie/getListJoueurParticipantsDtoResponse")]
        System.Threading.Tasks.Task<Domain.Dto.JoueurPartieDto[]> getListJoueurParticipantsDtoAsync(int IdPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getListDesDto", ReplyAction="http://tempuri.org/IGestionPartie/getListDesDtoResponse")]
        Domain.Dto.DeDto[] getListDesDto(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getListDesDto", ReplyAction="http://tempuri.org/IGestionPartie/getListDesDtoResponse")]
        System.Threading.Tasks.Task<Domain.Dto.DeDto[]> getListDesDtoAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getListCartesDto", ReplyAction="http://tempuri.org/IGestionPartie/getListCartesDtoResponse")]
        Domain.Dto.CarteDto[] getListCartesDto(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getListCartesDto", ReplyAction="http://tempuri.org/IGestionPartie/getListCartesDtoResponse")]
        System.Threading.Tasks.Task<Domain.Dto.CarteDto[]> getListCartesDtoAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getJoueurDto", ReplyAction="http://tempuri.org/IGestionPartie/getJoueurDtoResponse")]
        Domain.JoueurDto getJoueurDto(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/getJoueurDto", ReplyAction="http://tempuri.org/IGestionPartie/getJoueurDtoResponse")]
        System.Threading.Tasks.Task<Domain.JoueurDto> getJoueurDtoAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/lancerDes", ReplyAction="http://tempuri.org/IGestionPartie/lancerDesResponse")]
        Domain.Dto.DeDto[] lancerDes(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/lancerDes", ReplyAction="http://tempuri.org/IGestionPartie/lancerDesResponse")]
        System.Threading.Tasks.Task<Domain.Dto.DeDto[]> lancerDesAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/autoriserCarte", ReplyAction="http://tempuri.org/IGestionPartie/autoriserCarteResponse")]
        bool autoriserCarte(int idJoueurPartie, int cout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/autoriserCarte", ReplyAction="http://tempuri.org/IGestionPartie/autoriserCarteResponse")]
        System.Threading.Tasks.Task<bool> autoriserCarteAsync(int idJoueurPartie, int cout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/donnerDe", ReplyAction="http://tempuri.org/IGestionPartie/donnerDeResponse")]
        bool donnerDe(int IdJoueurPartie, int IdJoueurCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/donnerDe", ReplyAction="http://tempuri.org/IGestionPartie/donnerDeResponse")]
        System.Threading.Tasks.Task<bool> donnerDeAsync(int IdJoueurPartie, int IdJoueurCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/next", ReplyAction="http://tempuri.org/IGestionPartie/nextResponse")]
        Domain.Dto.JoueurPartieDto next();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/next", ReplyAction="http://tempuri.org/IGestionPartie/nextResponse")]
        System.Threading.Tasks.Task<Domain.Dto.JoueurPartieDto> nextAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/supprimerUnDe", ReplyAction="http://tempuri.org/IGestionPartie/supprimerUnDeResponse")]
        void supprimerUnDe(int IdJoueurPartie, int IdDe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/supprimerUnDe", ReplyAction="http://tempuri.org/IGestionPartie/supprimerUnDeResponse")]
        System.Threading.Tasks.Task supprimerUnDeAsync(int IdJoueurPartie, int IdDe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/supprimerDeuxDes", ReplyAction="http://tempuri.org/IGestionPartie/supprimerDeuxDesResponse")]
        void supprimerDeuxDes(int IdJoueurPartie, int IdDe1, int IdDe2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/supprimerDeuxDes", ReplyAction="http://tempuri.org/IGestionPartie/supprimerDeuxDesResponse")]
        System.Threading.Tasks.Task supprimerDeuxDesAsync(int IdJoueurPartie, int IdDe1, int IdDe2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/donnerDeAGaucheOuDroite", ReplyAction="http://tempuri.org/IGestionPartie/donnerDeAGaucheOuDroiteResponse")]
        void donnerDeAGaucheOuDroite(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/donnerDeAGaucheOuDroite", ReplyAction="http://tempuri.org/IGestionPartie/donnerDeAGaucheOuDroiteResponse")]
        System.Threading.Tasks.Task donnerDeAGaucheOuDroiteAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/rejouerEtChangementDeSens", ReplyAction="http://tempuri.org/IGestionPartie/rejouerEtChangementDeSensResponse")]
        void rejouerEtChangementDeSens(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/rejouerEtChangementDeSens", ReplyAction="http://tempuri.org/IGestionPartie/rejouerEtChangementDeSensResponse")]
        System.Threading.Tasks.Task rejouerEtChangementDeSensAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/prendreUneCarteDUnJoueur", ReplyAction="http://tempuri.org/IGestionPartie/prendreUneCarteDUnJoueurResponse")]
        void prendreUneCarteDUnJoueur(int IdJoueurPartie, int IdJoueurPartieCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/prendreUneCarteDUnJoueur", ReplyAction="http://tempuri.org/IGestionPartie/prendreUneCarteDUnJoueurResponse")]
        System.Threading.Tasks.Task prendreUneCarteDUnJoueurAsync(int IdJoueurPartie, int IdJoueurPartieCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/donnerUnDeAUnJoueur", ReplyAction="http://tempuri.org/IGestionPartie/donnerUnDeAUnJoueurResponse")]
        void donnerUnDeAUnJoueur(int IdJoueurPartie, int IdJoueurPartieCible, int IdDe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/donnerUnDeAUnJoueur", ReplyAction="http://tempuri.org/IGestionPartie/donnerUnDeAUnJoueurResponse")]
        System.Threading.Tasks.Task donnerUnDeAUnJoueurAsync(int IdJoueurPartie, int IdJoueurPartieCible, int IdDe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/ciblerJoueurQUUneCarte", ReplyAction="http://tempuri.org/IGestionPartie/ciblerJoueurQUUneCarteResponse")]
        void ciblerJoueurQUUneCarte(int IdJoueurPartie, int IdJoueurPartieCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/ciblerJoueurQUUneCarte", ReplyAction="http://tempuri.org/IGestionPartie/ciblerJoueurQUUneCarteResponse")]
        System.Threading.Tasks.Task ciblerJoueurQUUneCarteAsync(int IdJoueurPartie, int IdJoueurPartieCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/passeSonTour", ReplyAction="http://tempuri.org/IGestionPartie/passeSonTourResponse")]
        void passeSonTour(int IdJoueurPartie, int IdJoueurPartieCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/passeSonTour", ReplyAction="http://tempuri.org/IGestionPartie/passeSonTourResponse")]
        System.Threading.Tasks.Task passeSonTourAsync(int IdJoueurPartie, int IdJoueurPartieCible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/piocheTroisCartes", ReplyAction="http://tempuri.org/IGestionPartie/piocheTroisCartesResponse")]
        void piocheTroisCartes(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/piocheTroisCartes", ReplyAction="http://tempuri.org/IGestionPartie/piocheTroisCartesResponse")]
        System.Threading.Tasks.Task piocheTroisCartesAsync(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/plusQueDeuxCartesPourLesAutres", ReplyAction="http://tempuri.org/IGestionPartie/plusQueDeuxCartesPourLesAutresResponse")]
        void plusQueDeuxCartesPourLesAutres(int IdJoueurPartie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartie/plusQueDeuxCartesPourLesAutres", ReplyAction="http://tempuri.org/IGestionPartie/plusQueDeuxCartesPourLesAutresResponse")]
        System.Threading.Tasks.Task plusQueDeuxCartesPourLesAutresAsync(int IdJoueurPartie);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionPartieChannel : UnitTestMafia.ServiceReference2.IGestionPartie, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionPartieClient : System.ServiceModel.ClientBase<UnitTestMafia.ServiceReference2.IGestionPartie>, UnitTestMafia.ServiceReference2.IGestionPartie {
        
        public GestionPartieClient() {
        }
        
        public GestionPartieClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionPartieClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionPartieClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionPartieClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Domain.JoueurDto CreerPartie(string nomPartie, string nomJoueur) {
            return base.Channel.CreerPartie(nomPartie, nomJoueur);
        }
        
        public System.Threading.Tasks.Task<Domain.JoueurDto> CreerPartieAsync(string nomPartie, string nomJoueur) {
            return base.Channel.CreerPartieAsync(nomPartie, nomJoueur);
        }
        
        public bool RejoindrePartie(string pseudo) {
            return base.Channel.RejoindrePartie(pseudo);
        }
        
        public System.Threading.Tasks.Task<bool> RejoindrePartieAsync(string pseudo) {
            return base.Channel.RejoindrePartieAsync(pseudo);
        }
        
        public bool CommencerPartie() {
            return base.Channel.CommencerPartie();
        }
        
        public System.Threading.Tasks.Task<bool> CommencerPartieAsync() {
            return base.Channel.CommencerPartieAsync();
        }
        
        public string GetPartieDebug() {
            return base.Channel.GetPartieDebug();
        }
        
        public System.Threading.Tasks.Task<string> GetPartieDebugAsync() {
            return base.Channel.GetPartieDebugAsync();
        }
        
        public Domain.Dto.PartieDto[] VoirPartie(string pseudo) {
            return base.Channel.VoirPartie(pseudo);
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.PartieDto[]> VoirPartieAsync(string pseudo) {
            return base.Channel.VoirPartieAsync(pseudo);
        }
        
        public Domain.Dto.PartieDto LancerPartie() {
            return base.Channel.LancerPartie();
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.PartieDto> LancerPartieAsync() {
            return base.Channel.LancerPartieAsync();
        }
        
        public Domain.Dto.CarteDto piocherCarte(int IdJoueurPartie) {
            return base.Channel.piocherCarte(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.CarteDto> piocherCarteAsync(int IdJoueurPartie) {
            return base.Channel.piocherCarteAsync(IdJoueurPartie);
        }
        
        public Domain.Dto.JoueurPartieDto getJoueurParticipantDto(int IdJoueurPartie) {
            return base.Channel.getJoueurParticipantDto(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.JoueurPartieDto> getJoueurParticipantDtoAsync(int IdJoueurPartie) {
            return base.Channel.getJoueurParticipantDtoAsync(IdJoueurPartie);
        }
        
        public Domain.Dto.JoueurPartieDto[] getListJoueurParticipantsDto(int IdPartie) {
            return base.Channel.getListJoueurParticipantsDto(IdPartie);
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.JoueurPartieDto[]> getListJoueurParticipantsDtoAsync(int IdPartie) {
            return base.Channel.getListJoueurParticipantsDtoAsync(IdPartie);
        }
        
        public Domain.Dto.DeDto[] getListDesDto(int IdJoueurPartie) {
            return base.Channel.getListDesDto(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.DeDto[]> getListDesDtoAsync(int IdJoueurPartie) {
            return base.Channel.getListDesDtoAsync(IdJoueurPartie);
        }
        
        public Domain.Dto.CarteDto[] getListCartesDto(int IdJoueurPartie) {
            return base.Channel.getListCartesDto(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.CarteDto[]> getListCartesDtoAsync(int IdJoueurPartie) {
            return base.Channel.getListCartesDtoAsync(IdJoueurPartie);
        }
        
        public Domain.JoueurDto getJoueurDto(int IdJoueurPartie) {
            return base.Channel.getJoueurDto(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task<Domain.JoueurDto> getJoueurDtoAsync(int IdJoueurPartie) {
            return base.Channel.getJoueurDtoAsync(IdJoueurPartie);
        }
        
        public Domain.Dto.DeDto[] lancerDes(int IdJoueurPartie) {
            return base.Channel.lancerDes(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.DeDto[]> lancerDesAsync(int IdJoueurPartie) {
            return base.Channel.lancerDesAsync(IdJoueurPartie);
        }
        
        public bool autoriserCarte(int idJoueurPartie, int cout) {
            return base.Channel.autoriserCarte(idJoueurPartie, cout);
        }
        
        public System.Threading.Tasks.Task<bool> autoriserCarteAsync(int idJoueurPartie, int cout) {
            return base.Channel.autoriserCarteAsync(idJoueurPartie, cout);
        }
        
        public bool donnerDe(int IdJoueurPartie, int IdJoueurCible) {
            return base.Channel.donnerDe(IdJoueurPartie, IdJoueurCible);
        }
        
        public System.Threading.Tasks.Task<bool> donnerDeAsync(int IdJoueurPartie, int IdJoueurCible) {
            return base.Channel.donnerDeAsync(IdJoueurPartie, IdJoueurCible);
        }
        
        public Domain.Dto.JoueurPartieDto next() {
            return base.Channel.next();
        }
        
        public System.Threading.Tasks.Task<Domain.Dto.JoueurPartieDto> nextAsync() {
            return base.Channel.nextAsync();
        }
        
        public void supprimerUnDe(int IdJoueurPartie, int IdDe) {
            base.Channel.supprimerUnDe(IdJoueurPartie, IdDe);
        }
        
        public System.Threading.Tasks.Task supprimerUnDeAsync(int IdJoueurPartie, int IdDe) {
            return base.Channel.supprimerUnDeAsync(IdJoueurPartie, IdDe);
        }
        
        public void supprimerDeuxDes(int IdJoueurPartie, int IdDe1, int IdDe2) {
            base.Channel.supprimerDeuxDes(IdJoueurPartie, IdDe1, IdDe2);
        }
        
        public System.Threading.Tasks.Task supprimerDeuxDesAsync(int IdJoueurPartie, int IdDe1, int IdDe2) {
            return base.Channel.supprimerDeuxDesAsync(IdJoueurPartie, IdDe1, IdDe2);
        }
        
        public void donnerDeAGaucheOuDroite(int IdJoueurPartie) {
            base.Channel.donnerDeAGaucheOuDroite(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task donnerDeAGaucheOuDroiteAsync(int IdJoueurPartie) {
            return base.Channel.donnerDeAGaucheOuDroiteAsync(IdJoueurPartie);
        }
        
        public void rejouerEtChangementDeSens(int IdJoueurPartie) {
            base.Channel.rejouerEtChangementDeSens(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task rejouerEtChangementDeSensAsync(int IdJoueurPartie) {
            return base.Channel.rejouerEtChangementDeSensAsync(IdJoueurPartie);
        }
        
        public void prendreUneCarteDUnJoueur(int IdJoueurPartie, int IdJoueurPartieCible) {
            base.Channel.prendreUneCarteDUnJoueur(IdJoueurPartie, IdJoueurPartieCible);
        }
        
        public System.Threading.Tasks.Task prendreUneCarteDUnJoueurAsync(int IdJoueurPartie, int IdJoueurPartieCible) {
            return base.Channel.prendreUneCarteDUnJoueurAsync(IdJoueurPartie, IdJoueurPartieCible);
        }
        
        public void donnerUnDeAUnJoueur(int IdJoueurPartie, int IdJoueurPartieCible, int IdDe) {
            base.Channel.donnerUnDeAUnJoueur(IdJoueurPartie, IdJoueurPartieCible, IdDe);
        }
        
        public System.Threading.Tasks.Task donnerUnDeAUnJoueurAsync(int IdJoueurPartie, int IdJoueurPartieCible, int IdDe) {
            return base.Channel.donnerUnDeAUnJoueurAsync(IdJoueurPartie, IdJoueurPartieCible, IdDe);
        }
        
        public void ciblerJoueurQUUneCarte(int IdJoueurPartie, int IdJoueurPartieCible) {
            base.Channel.ciblerJoueurQUUneCarte(IdJoueurPartie, IdJoueurPartieCible);
        }
        
        public System.Threading.Tasks.Task ciblerJoueurQUUneCarteAsync(int IdJoueurPartie, int IdJoueurPartieCible) {
            return base.Channel.ciblerJoueurQUUneCarteAsync(IdJoueurPartie, IdJoueurPartieCible);
        }
        
        public void passeSonTour(int IdJoueurPartie, int IdJoueurPartieCible) {
            base.Channel.passeSonTour(IdJoueurPartie, IdJoueurPartieCible);
        }
        
        public System.Threading.Tasks.Task passeSonTourAsync(int IdJoueurPartie, int IdJoueurPartieCible) {
            return base.Channel.passeSonTourAsync(IdJoueurPartie, IdJoueurPartieCible);
        }
        
        public void piocheTroisCartes(int IdJoueurPartie) {
            base.Channel.piocheTroisCartes(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task piocheTroisCartesAsync(int IdJoueurPartie) {
            return base.Channel.piocheTroisCartesAsync(IdJoueurPartie);
        }
        
        public void plusQueDeuxCartesPourLesAutres(int IdJoueurPartie) {
            base.Channel.plusQueDeuxCartesPourLesAutres(IdJoueurPartie);
        }
        
        public System.Threading.Tasks.Task plusQueDeuxCartesPourLesAutresAsync(int IdJoueurPartie) {
            return base.Channel.plusQueDeuxCartesPourLesAutresAsync(IdJoueurPartie);
        }
    }
}
